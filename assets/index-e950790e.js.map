{"version":3,"file":"index-e950790e.js","sources":["../../src/scripts/log.ts","../../src/pages/main-page.tsx","../../src/app.tsx","../../src/scripts/indexedDB.ts","../../src/main.tsx"],"sourcesContent":["/**\n *\n * @param {string} category What part of the script we currently are in\n * @param {...any} params   Everything else, text, objects and so forth.\n */\nexport function log(category: string, ...params: any[]): void {\n  if (timestampLogs) {\n    params = [...params, new Date().toISOString()];\n  }\n  console.log(`[${category}]`, JSON.stringify([...params]));\n}\n\nvar timestampLogs = false;\n","export default function MainPage() {\n  return (\n    <>\n      Main page -{\" \"}\n      <a\n        href={\n          import.meta.env.VITE_BUNGIE_API_AUTHURL +\n          \"?state=dataverse-\" +\n          new Date().getTime()\n        }>\n        Log in\n      </a>\n    </>\n  );\n}\n","import { Router } from \"preact-router\";\nimport { Fragment } from \"preact/jsx-runtime\";\nimport { createHashHistory } from \"history\";\nimport \"./app.css\";\nimport MainPage from \"./pages/main-page\";\n\nexport function App() {\n  return (\n    <>\n      <header className=\"header tooltip\">Dataverse</header>\n      <div class=\"app\">\n        <Router history={createHashHistory()}>\n          <Fragment path=\"/\">\n            <MainPage />\n          </Fragment>\n          <div path=\"/authenticated\">Authenticated</div>\n        </Router>\n      </div>\n      <footer className=\"fui body fiction\">Â© 2023 NoLifeKing85#2914</footer>\n    </>\n  );\n}\n","import { log } from \"./log\";\nexport class Destiny2Database {\n  DBInstance: IDBDatabase | null;\n  initializeDatabase: () => Promise<void>;\n  setItem: (key: string, value: any) => Promise<void>;\n  getItem: (key: string, defaultValue?: null) => Promise<any>;\n  removeItem: (key: string) => Promise<void>;\n  setStorageItem: (\n    storageName: string,\n    key: string,\n    value: any\n  ) => Promise<void>;\n  getStorageItem: (\n    storageName: string,\n    key: string,\n    defaultValue?: null\n  ) => Promise<any>;\n  getStorageItems: (storageName: string, filter?: null) => Promise<any>;\n  removeStorageItem: (storageName: string, key: string) => Promise<void>;\n  constructor() {\n    this.DBInstance = null;\n\n    this.initializeDatabase = async function () {\n      return new Promise<void>((resolve, reject) => {\n        let dbRequest = window.indexedDB.open(\"destiny2-dataverse\", 2);\n\n        dbRequest.onupgradeneeded = function (event) {\n          const db = dbRequest.result;\n\n          log(\"DB\", \"Old\", event.oldVersion, \"New\", event.newVersion);\n          if (event.oldVersion < 1) {\n            log(\n              \"DB\",\n              \"Creating first version of database, since it never existed on this installation.\"\n            );\n            const keyValueStore = db.createObjectStore(\"storage\", {\n              autoIncrement: false,\n              keyPath: \"key\",\n            });\n\n            keyValueStore.createIndex(\"by_key\", \"key\");\n          }\n          if (event.oldVersion < 2) {\n            log(\"DB\", \"Creating object store for player/character activity\");\n\n            const playerActivityStore = db.createObjectStore(\"playerActivity\", {\n              autoIncrement: false,\n              keyPath: \"key\",\n            });\n\n            playerActivityStore.createIndex(\"by_key\", \"key\");\n\n            const activityDetailsStore = db.createObjectStore(\n              \"activityDetails\",\n              {\n                autoIncrement: false,\n                keyPath: \"key\",\n              }\n            );\n\n            activityDetailsStore.createIndex(\"by_key\", \"key\");\n          }\n        };\n\n        dbRequest.onsuccess = function (e: any) {\n          log(\"DB\", \"Loaded database\");\n          self.DBInstance = e.target.result;\n\n          resolve();\n        };\n\n        dbRequest.onerror = function (event) {\n          log(\"DB\", \"Failed to load database\");\n          reject(event);\n        };\n      });\n    };\n\n    async function _setItem(storeName: string, key: string, value: any) {\n      return new Promise<void>((resolve, reject) => {\n        const transaction = self.DBInstance!.transaction(\n          storeName,\n          \"readwrite\"\n        );\n        const objectStore = transaction.objectStore(storeName);\n        const request = objectStore.put({\n          key: key,\n          value: value,\n        });\n\n        request.onsuccess = function () {\n          resolve();\n        };\n\n        request.onerror = function (event) {\n          reject(event);\n        };\n      });\n    }\n\n    async function _getFilteredItems(storeName: string, filter = null) {\n      return new Promise((resolve, reject) => {\n        const transaction = self.DBInstance!.transaction(storeName, \"readonly\");\n        const objectStore = transaction.objectStore(storeName);\n        const request = objectStore.getAll();\n\n        request.onsuccess = function () {\n          const result = request.result;\n\n          if (filter) {\n            resolve(result.filter(filter));\n          } else {\n            resolve(result);\n          }\n        };\n\n        request.onerror = function (event) {\n          reject(event);\n        };\n      });\n    }\n\n    async function _getItem(\n      storeName: string,\n      key: string,\n      defaultValue: any | null = null\n    ) {\n      return new Promise((resolve, reject) => {\n        const transaction = self.DBInstance!.transaction(storeName, \"readonly\");\n        const objectStore = transaction.objectStore(storeName);\n        const request = objectStore.get(key);\n\n        request.onsuccess = function (event: any) {\n          if (event.target.result) {\n            resolve(event.target.result.value);\n          } else {\n            resolve(defaultValue);\n          }\n        };\n\n        request.onerror = function (event) {\n          reject(event);\n        };\n      });\n    }\n\n    async function _removeItem(storeName: string, key: string) {\n      return new Promise<void>((resolve, reject) => {\n        const transaction = self.DBInstance!.transaction(\n          storeName,\n          \"readwrite\"\n        );\n        const objectStore = transaction.objectStore(storeName);\n        const request = objectStore.delete(key);\n\n        request.onsuccess = function () {\n          resolve();\n        };\n\n        request.onerror = function (event) {\n          reject(event);\n        };\n      });\n    }\n\n    this.setItem = async function (key: string, value: any) {\n      return await _setItem(\"storage\", key, value);\n    };\n\n    this.getItem = async function (\n      key: string,\n      defaultValue: any | null = null\n    ) {\n      return await _getItem(\"storage\", key, defaultValue);\n    };\n\n    this.removeItem = async function (key: string) {\n      return await _removeItem(\"storage\", key);\n    };\n\n    this.setStorageItem = async function (\n      storageName: string,\n      key: string,\n      value: any | null\n    ) {\n      return await _setItem(storageName, key, value);\n    };\n\n    this.getStorageItem = async function (\n      storageName,\n      key,\n      defaultValue = null\n    ) {\n      return await _getItem(storageName, key, defaultValue);\n    };\n\n    this.getStorageItems = async function (storageName: string, filter = null) {\n      return await _getFilteredItems(storageName, filter);\n    };\n\n    this.removeStorageItem = async function (storageName: string, key: string) {\n      return await _removeItem(storageName, key);\n    };\n\n    var self = this;\n\n    return this;\n  }\n}\n","import { render } from \"preact\";\nimport { log } from \"./scripts/log\";\nimport { App } from \"./app\";\nimport { Destiny2Database } from \"./scripts/indexedDB\";\nimport \"./assets/fonts/style.css\";\nimport \"./index.css\";\nimport \"./styles/main.scss\";\n\ndeclare global {\n  interface Window {\n    db: Destiny2Database;\n  }\n}\n\nwindow.db = new Destiny2Database();\n\nlog(\"MAIN\", \"Starting app...\");\n\nwindow.db.initializeDatabase();\n\nrender(<App />, document.getElementById(\"app\") as HTMLElement);\n"],"names":["log","category","params","JSON","stringify","MainPage","_jsxs","_Fragment","children","_jsx","href","import","Date","getTime","App","className","class","Router","history","createHashHistory","Fragment","path","Destiny2Database","constructor","DBInstance","initializeDatabase","setItem","getItem","removeItem","setStorageItem","getStorageItem","getStorageItems","removeStorageItem","Promise","resolve","reject","dbRequest","window","indexedDB","open","onupgradeneeded","event","db","result","oldVersion","newVersion","createObjectStore","autoIncrement","keyPath","createIndex","onsuccess","e","target","onerror","_setItem","storeName","key","value","request","self","transaction","objectStore","put","_getFilteredItems","filter","getAll","_getItem","defaultValue","get","_removeItem","delete","storageName","render","document","getElementById"],"mappings":"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"}