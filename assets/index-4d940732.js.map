{"version":3,"file":"index-4d940732.js","sources":["../../src/scripts/log.ts","../../src/pages/main-page.tsx","../../src/pages/authenticated.tsx","../../src/scripts/utils.ts","../../src/components/goalList.tsx","../../src/pages/dashboard.tsx","../../src/components/footer.tsx","../../src/pages/logging-in.tsx","../../src/components/header.tsx","../../src/app.tsx","../../src/scripts/indexedDB.ts","../../src/scripts/eventEmitter.ts","../../src/scripts/apiClasses/itemState.ts","../../src/scripts/destiny2Goals.ts","../../src/scripts/apiClient.ts","../../src/main.tsx"],"sourcesContent":["/**\n *\n * @param {string} category What part of the script we currently are in\n * @param {...any} params   Everything else, text, objects and so forth.\n */\nexport function log(category: string, ...params: any[]): void {\n  if (timestampLogs) {\n    params = [...params, new Date().toISOString()];\n  }\n  console.log(`[${category}]`, JSON.stringify([...params]));\n}\n\nvar timestampLogs = false;\n","import { D2AppState } from \"../classes/appState\";\n\nexport default function MainPage(props: D2AppState) {\n  if (props.isAuthenticated.value) {\n    location.href = \"/#/logging-in\";\n    return <></>;\n  }\n\n  return (\n    <>\n      Main page -{\" \"}\n      <a\n        href={\n          import.meta.env.VITE_BUNGIE_API_AUTHURL +\n          \"?state=dataverse-\" +\n          new Date().getTime()\n        }\n      >\n        Log in\n      </a>\n    </>\n  );\n}\n","import { getCurrentUrl } from \"preact-router\";\nimport { log } from \"../scripts/log\";\n\nexport default function Authenticated() {\n  const apiClient = window.apiClient;\n\n  const url = getCurrentUrl();\n  log(\"Auth\", \"Authenticated page, getting code\", url);\n  const authUrl = new URL(url, location.origin).searchParams;\n\n  const code = authUrl.get(\"code\");\n\n  if (!code) {\n    log(\"Auth\", \"No code found, redirecting to main page\");\n    location.href = \"/\";\n    return <>Redirecting to main page</>;\n  }\n\n  apiClient\n    .getToken(\"\", code)\n    .then(() => {\n      log(\"Auth\", \"Got token, redirecting to dashboard\");\n      location.href = \"/#/logging-in\";\n    })\n    .catch((err) => {\n      log(\"Auth\", \"Failed to get token, redirecting to main page\");\n      location.href = \"/\";\n    });\n\n  return <>Authenticated, redirecting to Dashboard</>;\n}\n","/**\n * Shortens the text if it's longer than the max length\n * @param {string} string\n * @param {number} maxLength\n * @returns {string}\n */\nexport function shorten(string: string, maxLength: number): string {\n  if (string.length > maxLength) {\n    return string.substring(0, maxLength).trim() + \" ...\";\n  }\n\n  return string;\n}\n\n/**\n * Sorts a the dictionary you send, based on the property (numbers)\n * @param {Object} dictionary\n * @param {String} property The property in the dictionary to sort on\n * @param {Boolean} ascending Sort ascending or descending (Default descending)\n */\nexport function sortDictionaryByProperty(\n  dictionary: any,\n  property: string,\n  ascending: boolean\n) {\n  let items = Object.keys(dictionary).map(function (key) {\n    return [key, dictionary[key]];\n  });\n\n  items.sort(function (first, second) {\n    if (ascending) return first[1][property] - second[1][property];\n    return second[1][property] - first[1][property];\n  });\n\n  return items;\n}\n\nexport function sortDictionaryByPropertyAlphabetically(\n  dictionary: any,\n  property: string,\n  ascending: boolean\n) {\n  let internal = sortDictionaryByProperty(dictionary, property, ascending);\n\n  var keys = internal.map((v) => v[0]).sort();\n\n  let newItems = [];\n  for (let key of keys) {\n    newItems.push([key, internal.filter((v) => v[0] == key)[0][1]]);\n  }\n\n  return newItems;\n}\n\n/**\n * Outputs a date in YYYY-MM-DD format\n * @param {Date} date\n */\nexport function formatDate(date: Date) {\n  let retVal = \"\";\n\n  retVal += date.getFullYear() + \"-\";\n  if (date.getMonth() + 1 < 10) {\n    retVal += \"0\";\n  }\n  retVal += date.getMonth() + 1 + \"-\";\n\n  if (date.getDate() < 10) {\n    retVal += \"0\";\n  }\n  retVal += date.getDate();\n\n  return retVal;\n}\n\n/**\n *\n * @param {Date} startDate\n * @param {Date} endDate\n * @param {Boolean} latestSession\n * @returns {String}\n */\nexport function formatTimespan(\n  startDate: any,\n  endDate: any,\n  latestSession = false\n) {\n  if (!latestSession && !endDate) return `Unknown, no end time`;\n  return outputTimesObjectFromDifference(getTimeDifference(startDate, endDate));\n}\n\n/**\n *\n * @param {Number} days\n * @param {Number} hours\n * @param {Number} minutes\n * @param {Number} seconds\n * @returns {String}\n */\nexport function outputTimesObject(\n  days: number,\n  hours: number,\n  minutes: number\n) {\n  let time = [];\n\n  if (days > 0) time.push(`${days}d`);\n  if (hours > 0) time.push(`${hours}h`);\n  if (minutes > 0) time.push(`${minutes}m`);\n\n  return time.join(\", \");\n}\n\nexport function outputTimesObjectFromDifference(differenceInSeconds: number) {\n  let { days, hours, minutes } = getTimeObject(differenceInSeconds);\n  return outputTimesObject(days, hours, minutes);\n}\n\n/**\n *\n * @param {Date} startDate\n * @param {Date} endDate\n * @returns {Number}\n */\nexport function getTimeDifference(startDate: number, endDate: number) {\n  if (!endDate) endDate = Date.now();\n  return (endDate - startDate) / 1000;\n}\n\nfunction getTimeObject(differenceInSeconds: number) {\n  let days = Math.floor(differenceInSeconds / (24 * 3600));\n  let hours = Math.floor((differenceInSeconds % (24 * 3600)) / 3600);\n  let minutes = Math.floor((differenceInSeconds % 3600) / 60);\n  let seconds = Math.floor(differenceInSeconds % 60);\n\n  return {\n    days,\n    hours,\n    minutes,\n    seconds,\n  };\n}\n\n/**\n *\n * @param {Number} count\n * @param {String} singular\n * @param {String} plural\n * @returns {String} pluralized string\n */\nexport function pluralize(count: number, singular: string, plural: string) {\n  return `${count} ${count === 1 ? singular : plural}`;\n}\n\n/**\n * Method copied from Stackoverflow (https://stackoverflow.com/a/8809472/1025823)\n * @returns {string} Returns a UUIDv4\n */\nexport function generateUUID() {\n  // Public Domain/MIT\n  var d = new Date().getTime(); //Timestamp\n  var d2 = (performance && performance.now && performance.now() * 1000) || 0; //Time in microseconds since page-load or 0 if unsupported\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16; //random number between 0 and 16\n    if (d > 0) {\n      //Use timestamp until depleted\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      //Use microseconds since page-load if supported\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n","import { useSignal } from \"@preact/signals\";\nimport { GoalDataItem } from \"../scripts/apiClasses/goalDataItem\";\nimport { formatTimespan } from \"../scripts/utils\";\nimport \"../styles/components/goalList.scss\";\nimport { D2AppState } from \"../classes/appState\";\nimport { useEffect } from \"preact/hooks\";\n\nconst intlFormat = new Intl.NumberFormat();\n\nconst destinyBaseUrl = \"https://www.bungie.net\";\n\nvar trackingItems = {\n  milestones: true,\n  bounties: true,\n  quests: true,\n  records: true,\n  seasonRank: true,\n};\n\nvar cachedGoals: GoalDataItem[] = [];\n\nexport function GoalList(props: D2AppState) {\n  const eventEmitter = window.eventEmitter;\n  const apiClient = window.apiClient;\n\n  var dataUpdate: NodeJS.Timer;\n\n  useEffect(() => {\n    eventEmitter.addEventListener(\"goal-list-update\", updateGoalList);\n\n    (async function () {\n      await apiClient.getTrackableData();\n\n      dataUpdate = setInterval(async () => {\n        await apiClient.getTrackableData();\n      }, 15 * 1000);\n\n      return () => {\n        clearInterval(dataUpdate);\n      };\n    })();\n  }, []);\n\n  function renderProgress(goal: any) {\n    let progress: any = null;\n\n    if (goal.inProgressValueStyle === 0) {\n      if (goal.nextLevelAt === 1) {\n        goal.inProgressValueStyle = 2;\n      }\n    }\n\n    switch (goal.inProgressValueStyle) {\n      case 2:\n        progress = (\n          <span className=\"goal-progress\">\n            {goal.progressToNextLevel == 0 ? \"Incomplete\" : \"Complete\"}\n          </span>\n        );\n        break;\n      case 3:\n        let progressPercent = (\n          (goal.progressToNextLevel / goal.nextLevelAt) *\n          100\n        ).toFixed(0);\n        progress = <span className=\"goal-progress\">{progressPercent} %</span>;\n        break;\n      case 8:\n        progress = \"\";\n        break;\n      case 12:\n        progress = (\n          <span className=\"goal-progress\">{goal.progressToNextLevel} %</span>\n        );\n        break;\n      case 6:\n      default:\n        progress = (\n          <span className=\"goal-progress\">\n            {intlFormat.format(goal.progressToNextLevel)} /{\" \"}\n            {intlFormat.format(goal.nextLevelAt)}\n          </span>\n        );\n        break;\n    }\n\n    return typeof goal.nextLevelAt !== \"undefined\" ? <>{progress}</> : null;\n  }\n\n  function renderGoalItem(goal: any) {\n    let icon =\n      typeof goal.icon !== \"undefined\" ? (\n        <img className=\"goal-icon\" src={`${destinyBaseUrl}${goal.icon}`} />\n      ) : null;\n\n    let expiryDate =\n      typeof goal.endDate !== \"undefined\" ? (\n        <>\n          <br />\n          <i class=\"fui body fiction goal-end\">\n            Ends in {formatTimespan(new Date(), new Date(goal.endDate))}\n          </i>\n        </>\n      ) : null;\n\n    let progress = renderProgress(goal);\n\n    return (\n      <div className=\"goal-item\">\n        {icon}\n        <div className=\"goal-body\">\n          <h5>\n            {goal.name}\n            {progress}\n          </h5>\n          {goal.description}\n          {expiryDate}\n        </div>\n      </div>\n    );\n  }\n\n  async function updateGoalList(goals: GoalDataItem[]) {\n    let goalsVisible = 0;\n\n    let _visibleGoals: GoalDataItem[] = [];\n\n    for (let goal of goals) {\n      let addGoal = true;\n\n      switch (goal.type) {\n        case \"milestone\":\n          addGoal = trackingItems.milestones;\n          break;\n        case \"quest\":\n          addGoal = trackingItems.quests;\n          break;\n        case \"bounty\":\n          addGoal = trackingItems.bounties;\n          break;\n        case \"characterRecord\":\n          addGoal = trackingItems.records;\n          break;\n        case \"seasonrank\":\n          addGoal = trackingItems.seasonRank;\n          break;\n      }\n\n      if (addGoal) {\n        _visibleGoals.push(goal);\n        goalsVisible++;\n      }\n    }\n\n    props.goals.value = _visibleGoals;\n    cachedGoals = goals;\n  }\n\n  return (\n    <div className=\"goal-container\">\n      {props.goals?.value?.length > 0 ? (\n        props.goals.value.map((goal) => renderGoalItem(goal))\n      ) : (\n        <>Loading ...</>\n      )}\n    </div>\n  );\n}\n","import { D2AppState } from \"../classes/appState\";\nimport { GoalList } from \"../components/goalList\";\n\nexport default function Dashboard(props: D2AppState) {\n  const apiClient = window.apiClient;\n\n  if (!props.isAuthenticated.value || !props.isDataLoaded.value) {\n    location.href = \"/\";\n    return <></>;\n  }\n\n  const userProfile = apiClient.profile.profile;\n\n  return (\n    <>\n      <GoalList {...props} />\n    </>\n  );\n}\n","export function Footer() {\n  return (\n    <footer className=\"fui body fiction\">\n      © 2023\n      {new Date().getUTCFullYear() != 2023\n        ? \" - \" + new Date().getUTCFullYear()\n        : null}{\" \"}\n      NoLifeKing85#2914\n    </footer>\n  );\n}\n","import { Signal } from \"@preact/signals\";\nimport { log } from \"../scripts/log\";\nimport { D2AppState } from \"../classes/appState\";\n\nexport default function LoggingIn(props: D2AppState) {\n  const apiClient = window.apiClient;\n\n  const eventEmitter = window.eventEmitter;\n\n  eventEmitter.addEventListener(\"loading-text\", (data: any) => {\n    if (!!data) {\n      setLoadingText(data);\n    }\n  });\n\n  function setLoadingText(text: string) {\n    let loadingText = document.getElementById(\"loading-text\");\n    if (loadingText) {\n      loadingText.innerText = text;\n    }\n  }\n\n  // Check if the user has a valid token and/or is authenticated, if not, redirect to the main page so they can login\n  apiClient\n    .checkIfAuthenticated()\n    .then(async (result) => {\n      if (!result) {\n        location.href = \"/\";\n        return;\n      }\n\n      log(\"LOGIN\", \"Authenticated, checking manifests\");\n\n      setLoadingText(\"Checking manifest ...\");\n      let manifestVersion = await apiClient.checkManifestVersion();\n\n      if (manifestVersion === null || manifestVersion === undefined) {\n        setLoadingText(\n          \"Something is wrong with Destiny 2 (or this app), please reload the page.\"\n        );\n        return;\n      }\n\n      log(\"LOGIN\", manifestVersion);\n\n      setLoadingText(\"Loading profile data\");\n\n      await apiClient.getLastPlayedCharacter();\n\n      setLoadingText(\"Checking for missing definitions\");\n\n      let missingDefinitions = await apiClient.checkStoredDefinitions(false);\n\n      if (missingDefinitions.length > 0) {\n        setLoadingText(\n          `Downloading ${missingDefinitions.length} missing definition(s)`\n        );\n        await apiClient.checkStoredDefinitions(true);\n      }\n\n      setLoadingText(\"Loading data...\");\n      await apiClient.loadDataFromStorage();\n\n      props.isDataLoaded.value = true;\n\n      setTimeout(() => {\n        setLoadingText(\"Opening application...\");\n        eventEmitter.emit(\"manifests-loaded\");\n\n        setTimeout(() => {\n          location.href = \"/#/dashboard\";\n        }, 1000);\n      }, 1000);\n    })\n    .catch(async (error) => {\n      if (error.status === 503) {\n        // Bungie API is down\n        setLoadingText(\"Bungie API is down, retrying in a minute.\");\n        setTimeout(() => {\n          location.href = \"/\";\n        }, 60000);\n      } else {\n        setLoadingText(\n          \"An error occurred while trying to log in, please try again.\"\n        );\n\n        console.error(error);\n        console.error(await error.json());\n      }\n      //location.href = \"/\";\n    });\n\n  return (\n    <>\n      <span class=\"fui body\" id=\"loading-text\">\n        Logging in and loading data ...\n      </span>\n    </>\n  );\n}\n","export function Header() {\n  return <header className=\"header subscreen\">Dataverse</header>;\n}\n","import { Router } from \"preact-router\";\nimport { Fragment } from \"preact/jsx-runtime\";\nimport { createHashHistory } from \"history\";\nimport \"./app.css\";\nimport MainPage from \"./pages/main-page\";\nimport Authenticated from \"./pages/authenticated\";\nimport Dashboard from \"./pages/dashboard\";\nimport { Footer } from \"./components/footer\";\nimport LoggingIn from \"./pages/logging-in\";\nimport { useContext } from \"preact/hooks\";\nimport { Header } from \"./components/header\";\n\nexport function App() {\n  const state = useContext(window.appState);\n  return (\n    <>\n      <Header />\n      <div class=\"app\">\n        <Router history={createHashHistory()}>\n          <Fragment path=\"/\">\n            <MainPage {...state} />\n          </Fragment>\n          <Fragment path=\"/authenticated\">\n            <Authenticated />\n          </Fragment>\n          <Fragment path=\"/logging-in\">\n            <LoggingIn {...state} />\n          </Fragment>\n          <Fragment path=\"/dashboard\">\n            <Dashboard {...state} />\n          </Fragment>\n        </Router>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import { log } from \"./log\";\nexport class Destiny2Database {\n  DBInstance: IDBDatabase | null;\n  initializeDatabase: () => Promise<void>;\n  setItem: (key: string, value: any) => Promise<void>;\n  setItems: (items: { key: string; value: any }[]) => Promise<void>;\n  getItem: (key: string, defaultValue?: any | null) => Promise<any>;\n  removeItem: (key: string) => Promise<void>;\n  setStorageItem: (\n    storageName: string,\n    key: string,\n    value: any\n  ) => Promise<void>;\n  setStorageItems: (\n    storageName: string,\n    items: { key: string; value: any }[]\n  ) => Promise<void>;\n  getStorageItem: (\n    storageName: string,\n    key: string,\n    defaultValue?: null\n  ) => Promise<any>;\n  getStorageItems: (storageName: string, filter?: null) => Promise<any>;\n  removeStorageItem: (storageName: string, key: string) => Promise<void>;\n  constructor() {\n    this.DBInstance = null;\n\n    this.initializeDatabase = async function () {\n      return new Promise<void>((resolve, reject) => {\n        let dbRequest = window.indexedDB.open(\"destiny2-dataverse\", 2);\n\n        dbRequest.onupgradeneeded = function (event) {\n          const db = dbRequest.result;\n\n          log(\"DB\", \"Old\", event.oldVersion, \"New\", event.newVersion);\n          if (event.oldVersion < 1) {\n            log(\n              \"DB\",\n              \"Creating first version of database, since it never existed on this installation.\"\n            );\n            const keyValueStore = db.createObjectStore(\"storage\", {\n              autoIncrement: false,\n              keyPath: \"key\",\n            });\n\n            keyValueStore.createIndex(\"by_key\", \"key\");\n          }\n          if (event.oldVersion < 2) {\n            log(\"DB\", \"Creating object store for player/character activity\");\n\n            const playerActivityStore = db.createObjectStore(\"playerActivity\", {\n              autoIncrement: false,\n              keyPath: \"key\",\n            });\n\n            playerActivityStore.createIndex(\"by_key\", \"key\");\n\n            const activityDetailsStore = db.createObjectStore(\n              \"activityDetails\",\n              {\n                autoIncrement: false,\n                keyPath: \"key\",\n              }\n            );\n\n            activityDetailsStore.createIndex(\"by_key\", \"key\");\n          }\n        };\n\n        dbRequest.onsuccess = function (e: any) {\n          log(\"DB\", \"Loaded database\");\n          self.DBInstance = e.target.result;\n\n          resolve();\n        };\n\n        dbRequest.onerror = function (event) {\n          log(\"DB\", \"Failed to load database\");\n          reject(event);\n        };\n      });\n    };\n\n    async function _setItem(storeName: string, key: string, value: any) {\n      return new Promise<void>((resolve, reject) => {\n        const transaction = self.DBInstance!.transaction(\n          storeName,\n          \"readwrite\"\n        );\n        const objectStore = transaction.objectStore(storeName);\n        const request = objectStore.put({\n          key: key,\n          value: value,\n        });\n\n        request.onsuccess = function () {\n          resolve();\n        };\n\n        request.onerror = function (event) {\n          reject(event);\n        };\n      });\n    }\n\n    async function _getFilteredItems(storeName: string, filter = null) {\n      return new Promise((resolve, reject) => {\n        const transaction = self.DBInstance!.transaction(storeName, \"readonly\");\n        const objectStore = transaction.objectStore(storeName);\n        const request = objectStore.getAll();\n\n        request.onsuccess = function () {\n          const result = request.result;\n\n          if (filter) {\n            resolve(result.filter(filter));\n          } else {\n            resolve(result);\n          }\n        };\n\n        request.onerror = function (event) {\n          reject(event);\n        };\n      });\n    }\n\n    async function _getItem(\n      storeName: string,\n      key: string,\n      defaultValue: any | null = null\n    ) {\n      return new Promise((resolve, reject) => {\n        const transaction = self.DBInstance!.transaction(storeName, \"readonly\");\n        const objectStore = transaction.objectStore(storeName);\n        const request = objectStore.get(key);\n\n        request.onsuccess = function (event: any) {\n          if (event.target.result) {\n            resolve(event.target.result.value);\n          } else {\n            resolve(defaultValue);\n          }\n        };\n\n        request.onerror = function (event) {\n          reject(event);\n        };\n      });\n    }\n\n    async function _removeItem(storeName: string, key: string) {\n      return new Promise<void>((resolve, reject) => {\n        const transaction = self.DBInstance!.transaction(\n          storeName,\n          \"readwrite\"\n        );\n        const objectStore = transaction.objectStore(storeName);\n        const request = objectStore.delete(key);\n\n        request.onsuccess = function () {\n          resolve();\n        };\n\n        request.onerror = function (event) {\n          reject(event);\n        };\n      });\n    }\n\n    this.setItem = async function (key: string, value: any) {\n      return await _setItem(\"storage\", key, value);\n    };\n\n    this.setItems = async function (items: { key: string; value: any }[]) {\n      for (let item of items) {\n        await _setItem(\"storage\", item.key, item.value);\n      }\n    };\n\n    this.getItem = async function (\n      key: string,\n      defaultValue: any | null = null\n    ) {\n      return await _getItem(\"storage\", key, defaultValue);\n    };\n\n    this.removeItem = async function (key: string) {\n      return await _removeItem(\"storage\", key);\n    };\n\n    this.setStorageItem = async function (\n      storageName: string,\n      key: string,\n      value: any | null\n    ) {\n      return await _setItem(storageName, key, value);\n    };\n\n    this.setStorageItems = async function (\n      storageName: string,\n      items: { key: string; value: any }[]\n    ) {\n      for (let item of items) {\n        await _setItem(storageName, item.key, item.value);\n      }\n    };\n\n    this.getStorageItem = async function (\n      storageName,\n      key,\n      defaultValue = null\n    ) {\n      return await _getItem(storageName, key, defaultValue);\n    };\n\n    this.getStorageItems = async function (storageName: string, filter = null) {\n      return await _getFilteredItems(storageName, filter);\n    };\n\n    this.removeStorageItem = async function (storageName: string, key: string) {\n      return await _removeItem(storageName, key);\n    };\n\n    var self = this;\n\n    return this;\n  }\n}\n","import { log } from \"./log.js\";\n\nclass D2Event {\n  eventName!: string;\n  handler!: CallableFunction;\n}\n\nexport class EventEmitter {\n  eventListeners: D2Event[];\n  addEventListener: (eventName: string, eventHandler: any) => void;\n  emit: (eventName: string, ...params: any[]) => Promise<unknown>;\n  constructor() {\n    this.eventListeners = [];\n\n    /**\n     * Listen to an event sent from this event emitter\n     * @param {String} eventName The event that you want to listen to\n     * @param {CallableFunction} eventHandler The method that should run whenever the event occurs\n     */\n    this.addEventListener = function (\n      eventName: string,\n      eventHandler: CallableFunction\n    ) {\n      log(`EVENT:REGISTERED`, eventName);\n      this.eventListeners.push({ eventName: eventName, handler: eventHandler });\n    };\n\n    /**\n     * Triggers an event, that will invoke all listeners\n     * @param {String} eventName\n     * @param {any[]} params\n     */\n    this.emit = async function (eventName: string, ...params: any[]) {\n      let logArguments = JSON.parse(\n        (await window.db.getItem(\"d2-debugmode\")) ?? \"false\"\n      );\n      if (logArguments) {\n        log(\"EVENT:EMITTING\", eventName, ...params);\n      } else {\n        log(\"EVENT:EMITTING\", eventName);\n      }\n      return new Promise((resolve, reject) => {\n        this.eventListeners\n          .filter((ev) => ev.eventName == eventName)\n          .forEach(async (l) => {\n            try {\n              await l.handler(...params);\n            } catch (e) {\n              log(\"EVENT:ERROR\", eventName, e);\n              console.error(e);\n              reject(e);\n            }\n          });\n\n        resolve(true);\n      });\n    };\n\n    log(\"EventEmitter\", \"Initialized\");\n\n    return this;\n  }\n}\n","export enum ItemState {\n  None = 0,\n  Locked = 1,\n  Tracked = 2,\n  Masterwork = 4,\n  Crafted = 8,\n  HighlightedObjective = 16,\n}\n","import { BountyDataItem } from \"./apiClasses/bountyDataItem\";\nimport { CharacterRecordDataItem } from \"./apiClasses/characterRecordDataItem\";\nimport { ItemState } from \"./apiClasses/itemState\";\nimport { MilestoneDataItem } from \"./apiClasses/milestoneDataItem\";\nimport { QuestDataItem } from \"./apiClasses/questDataItem\";\nimport { SeasonRankData } from \"./apiClasses/seasonRankData\";\nimport { Destiny2ApiClient } from \"./apiClient\";\n\nexport class Destiny2Goals {\n  getSeasonRankData: (\n    namedObject: any,\n    seasonDefinition: any,\n    seasonPassDefinition: any\n  ) => SeasonRankData;\n  replaceStringVariables: (\n    string: string,\n    profileVariables: string[]\n  ) => string;\n  getMilestoneData: (namedObject: any) => MilestoneDataItem[];\n  getBounties: (namedObject: any) => BountyDataItem[];\n  getQuests: (namedObject: any) => QuestDataItem[];\n  getCharacterRecords: (namedObject: any) => CharacterRecordDataItem[];\n  destinyApiClient: any;\n\n  constructor(destiny2ApiClient: Destiny2ApiClient) {\n    /**\n     * @description Used for the base URL of content, like images and such.\n     */\n    const destinyBaseUrl = \"https://www.bungie.net\";\n\n    this.destinyApiClient = destiny2ApiClient;\n\n    this.getSeasonRankData = function (\n      namedObject,\n      seasonDefinition,\n      seasonPassDefinition\n    ): SeasonRankData {\n      let seasonPassData =\n        namedObject.characterProgression.progressions[\n          seasonDefinition.seasonPassProgressionHash\n        ];\n      let seasonPassProgressionData =\n        namedObject.characterProgression.progressions[\n          seasonPassDefinition.prestigeProgressionHash\n        ];\n\n      let seasonArtifactData =\n        this.destinyApiClient.destinyDataDefinition\n          .DestinyInventoryItemDefinition[seasonDefinition.artifactItemHash];\n\n      let seasonRank = seasonPassData.level;\n      let nextLevelAt = seasonPassData.nextLevelAt;\n      let progressToNextLevel = seasonPassData.progressToNextLevel;\n\n      if (seasonPassData.level == seasonPassData.levelCap) {\n        seasonRank += seasonPassProgressionData.level;\n        nextLevelAt += seasonPassProgressionData.nextLevelAt;\n        progressToNextLevel += seasonPassProgressionData.progressToNextLevel;\n      }\n\n      let seasonRankDataItem: SeasonRankData = {\n        name: `Season Rank ${seasonRank}`,\n        description: seasonDefinition.displayProperties.name,\n        icon: `${seasonArtifactData.displayProperties.icon}`,\n        startDate: seasonDefinition.startDate,\n        endDate: seasonDefinition.endDate,\n        nextLevelAt: nextLevelAt,\n        progressToNextLevel: progressToNextLevel,\n        type: \"seasonrank\",\n        order: -1,\n        inProgressValueStyle: 0,\n        completedValueStyle: 0,\n      };\n      return seasonRankDataItem;\n    };\n\n    this.replaceStringVariables = function (string, profileVariables): string {\n      if (!string || string.indexOf(\"{var:\") === -1) return string;\n      var matchRegex = /{var:(\\d+)}/g;\n\n      var allMatches = string.match(matchRegex);\n\n      let newString = string;\n\n      if (allMatches) {\n        for (var i = 0; i < allMatches.length; i++) {\n          var match = allMatches[i];\n          var _match = match.match(/\\d+/);\n          if (_match) {\n            var matchIndex: any = _match[0];\n            var matchString = profileVariables[matchIndex];\n\n            if (matchString) {\n              newString = newString.replace(match, matchString);\n            }\n          }\n        }\n      }\n\n      return newString;\n    };\n\n    this.getMilestoneData = function (namedObject): MilestoneDataItem[] {\n      let milestoneData: MilestoneDataItem[] = [];\n\n      let milestoneKeys = Object.keys(\n        namedObject.characterProgression.milestones\n      );\n\n      for (let milestoneKey of milestoneKeys) {\n        let milestone =\n          namedObject.characterProgression.milestones[milestoneKey];\n\n        let milestoneDataItem: MilestoneDataItem = {\n          name: this.replaceStringVariables(\n            milestone.milestoneName,\n            namedObject.profileStringVariables.integerValuesByHash\n          ),\n          description: this.replaceStringVariables(\n            milestone.milestoneDescription,\n            namedObject.profileStringVariables.integerValuesByHash\n          ),\n          order: milestone.order,\n          icon: milestone.milestoneIcon,\n          type: \"milestone\",\n          inProgressValueStyle: 0,\n          completedValueStyle: 0,\n        };\n\n        if (milestone.startDate) {\n          milestoneDataItem.startDate = milestone.startDate;\n        }\n\n        if (milestone.endDate) {\n          milestoneDataItem.endDate = milestone.endDate;\n        }\n\n        if (milestone.availableQuests && milestone.availableQuests.length > 0) {\n          for (let quest of milestone.availableQuests) {\n            if (quest.tracked) {\n              milestoneDataItem.tracked = true;\n            }\n            if (quest.status.started && !quest.status.completed) {\n              if (\n                quest.status.stepObjectives &&\n                quest.status.stepObjectives.length > 0\n              ) {\n                for (let step of quest.status.stepObjectives) {\n                  if (!step.complete) {\n                    if (typeof step.progress !== \"undefined\") {\n                      milestoneDataItem.progressToNextLevel = step.progress;\n                    }\n\n                    if (typeof step.completionValue !== \"undefined\") {\n                      milestoneDataItem.nextLevelAt = step.completionValue;\n                    }\n\n                    if (\n                      typeof step.objectiveInProgressValueStyle !== \"undefined\"\n                    ) {\n                      milestoneDataItem.inProgressValueStyle =\n                        step.objectiveInProgressValueStyle;\n                    }\n\n                    if (\n                      typeof step.objectiveCompletedValueStyle !== \"undefined\"\n                    ) {\n                      milestoneDataItem.completedValueStyle =\n                        step.objectiveCompletedValueStyle;\n                    }\n\n                    if (\n                      (milestoneDataItem.icon ?? \"\").length == 0 &&\n                      typeof step.activityIcon !== \"undefined\"\n                    ) {\n                      milestoneDataItem.icon = step.activityIcon;\n                    }\n\n                    break;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        if (milestone.activities && milestone.activities.length > 0) {\n          for (let activity of milestone.activities) {\n            if (activity.challenges && activity.challenges.length > 0) {\n              for (let challenge of activity.challenges) {\n                if (!challenge.objective.complete) {\n                  if (typeof challenge.objective.progress !== \"undefined\") {\n                    milestoneDataItem.progressToNextLevel =\n                      challenge.objective.progress;\n                  }\n\n                  if (\n                    typeof challenge.objectiveInProgressValueStyle !==\n                    \"undefined\"\n                  ) {\n                    milestoneDataItem.inProgressValueStyle =\n                      challenge.objectiveInProgressValueStyle;\n                  }\n\n                  if (\n                    typeof challenge.objectiveCompletedValueStyle !==\n                    \"undefined\"\n                  ) {\n                    milestoneDataItem.completedValueStyle =\n                      challenge.objectiveCompletedValueStyle;\n                  }\n\n                  if (\n                    typeof challenge.objective.completionValue !== \"undefined\"\n                  ) {\n                    milestoneDataItem.nextLevelAt =\n                      challenge.objective.completionValue;\n                  }\n\n                  break;\n                }\n              }\n            }\n            break;\n          }\n        }\n\n        milestoneData.push(milestoneDataItem);\n      }\n\n      return milestoneData;\n    };\n\n    const bountyItemType = 26;\n\n    this.getBounties = function (namedObject): BountyDataItem[] {\n      let bountyData: BountyDataItem[] = [];\n\n      var bountyItems = namedObject.characterInventory.filter(\n        (item: any) => item.inventoryitemItemType === bountyItemType\n      );\n\n      for (let bounty of bountyItems) {\n        let itemObjectives =\n          namedObject.itemComponents.objectives.data[bounty.itemInstanceId]\n            .objectives;\n\n        let incompleteTasks = itemObjectives.filter(\n          (obj: any) => !obj.complete\n        );\n\n        // If we don't have any tasks left to do, we'll ignore this bounty\n        if (incompleteTasks.length === 0) continue;\n\n        for (let objective of incompleteTasks) {\n          let bountyDataItem: BountyDataItem = {\n            name: this.replaceStringVariables(\n              bounty.inventoryitemName,\n              namedObject.profileStringVariables.integerValuesByHash\n            ),\n            description: this.replaceStringVariables(\n              bounty.inventoryitemDescription,\n              namedObject.profileStringVariables.integerValuesByHash\n            ),\n            order: 500,\n            icon: bounty.inventoryitemIcon,\n            type: \"bounty\",\n            inProgressValueStyle: 0,\n            completedValueStyle: 0,\n            tracked: (bounty.state & ItemState.Tracked) == ItemState.Tracked,\n            state: bounty.state,\n          };\n\n          if (typeof bounty.expirationDate !== \"undefined\") {\n            bountyDataItem.endDate = bounty.expirationDate;\n\n            // If the bounty is expired, we'll ignore it\n            if (\n              new Date(bounty.expirationDate).getTime() < new Date().getTime()\n            ) {\n              continue;\n            }\n          }\n\n          if (typeof objective.completionValue !== \"undefined\") {\n            bountyDataItem.nextLevelAt = objective.completionValue;\n\n            if (\n              typeof objective.objectiveInProgressValueStyle !== \"undefined\"\n            ) {\n              bountyDataItem.inProgressValueStyle =\n                objective.objectiveInProgressValueStyle;\n            }\n\n            if (typeof objective.objectiveCompletedValueStyle !== \"undefined\") {\n              bountyDataItem.completedValueStyle =\n                objective.objectiveCompletedValueStyle;\n            }\n\n            if (typeof objective.progress !== \"undefined\") {\n              bountyDataItem.progressToNextLevel = objective.progress;\n            }\n\n            if (typeof objective.objectiveProgressDescription !== \"undefined\") {\n              // ${bountyDataItem.description}<br />\n              bountyDataItem.description = this.replaceStringVariables(\n                objective.objectiveProgressDescription,\n                namedObject.profileStringVariables.integerValuesByHash\n              );\n            }\n\n            bountyData.push(bountyDataItem);\n          }\n        }\n      }\n\n      return bountyData;\n    };\n\n    const questBucketHash = 1345459588;\n\n    this.getQuests = function (namedObject): QuestDataItem[] {\n      let questData: QuestDataItem[] = [];\n\n      var questItems = namedObject.characterInventory.filter(\n        (item: any) =>\n          item.bucketHash === questBucketHash &&\n          [bountyItemType].filter((i) => i != item.inventoryitemItemType)\n            .length > 0\n      );\n\n      let instancedQuestItems = questItems.filter(\n        (item: any) => typeof item.itemInstanceId !== \"undefined\"\n      );\n\n      let uninstancedQuestItems = questItems.filter(\n        (item: any) => typeof item.itemInstanceId === \"undefined\"\n      );\n\n      for (let instanceQuest of instancedQuestItems) {\n        let itemObjectives =\n          namedObject.itemComponents.objectives.data[\n            instanceQuest.itemInstanceId\n          ];\n\n        if (itemObjectives) {\n          const _objectives = itemObjectives.objectives.filter(\n            (objective: any) => objective.visible && !objective.complete\n          );\n\n          for (let objective of _objectives) {\n            let questDataItem: QuestDataItem = {\n              name: this.replaceStringVariables(\n                instanceQuest.inventoryitemName,\n                namedObject.profileStringVariables.integerValuesByHash\n              ),\n              description: this.replaceStringVariables(\n                instanceQuest.inventoryitemDescription,\n                namedObject.profileStringVariables.integerValuesByHash\n              ),\n              order: 1000,\n              icon: instanceQuest.inventoryitemIcon,\n              type: \"quest\",\n              inProgressValueStyle: 0,\n              completedValueStyle: 0,\n              tracked:\n                (instanceQuest.state & ItemState.Tracked) == ItemState.Tracked,\n              state: instanceQuest.state,\n            };\n\n            if (typeof objective.completionValue !== \"undefined\") {\n              questDataItem.nextLevelAt = objective.completionValue;\n\n              if (\n                typeof objective.objectiveInProgressValueStyle !== \"undefined\"\n              ) {\n                questDataItem.inProgressValueStyle =\n                  objective.objectiveInProgressValueStyle;\n              }\n\n              if (\n                typeof objective.objectiveCompletedValueStyle !== \"undefined\"\n              ) {\n                questDataItem.completedValueStyle =\n                  objective.objectiveCompletedValueStyle;\n              }\n\n              if (typeof objective.progress !== \"undefined\") {\n                questDataItem.progressToNextLevel = objective.progress;\n              }\n\n              if (\n                typeof objective.objectiveProgressDescription !== \"undefined\"\n              ) {\n                // ${questDataItem.description}<br />\n                questDataItem.description = this.replaceStringVariables(\n                  objective.objectiveProgressDescription,\n                  namedObject.profileStringVariables.integerValuesByHash\n                );\n              }\n\n              questData.push(questDataItem);\n            }\n          }\n        }\n      }\n\n      for (let uninstancedQuest of uninstancedQuestItems) {\n        let questObjectives = (\n          namedObject.characterProgression.uninstancedItemObjectives[\n            uninstancedQuest.itemHash\n          ] ?? []\n        ).filter((objective: any) => objective.visible && !objective.complete);\n\n        for (let objective of questObjectives) {\n          let questDataItem: QuestDataItem = {\n            name: this.replaceStringVariables(\n              uninstancedQuest.inventoryitemName,\n              namedObject.profileStringVariables.integerValuesByHash\n            ),\n            description: this.replaceStringVariables(\n              uninstancedQuest.inventoryitemDescription,\n              namedObject.profileStringVariables.integerValuesByHash\n            ),\n            order: 10000,\n            icon: uninstancedQuest.inventoryitemIcon,\n            type: \"quest\",\n            inProgressValueStyle: 0,\n            completedValueStyle: 0,\n            tracked:\n              (uninstancedQuest.state & ItemState.Tracked) == ItemState.Tracked,\n            state: uninstancedQuest.state,\n          };\n\n          if (typeof objective.completionValue !== \"undefined\") {\n            questDataItem.nextLevelAt = objective.completionValue;\n\n            if (\n              typeof objective.objectiveInProgressValueStyle !== \"undefined\"\n            ) {\n              questDataItem.inProgressValueStyle =\n                objective.objectiveInProgressValueStyle;\n            }\n\n            if (typeof objective.objectiveCompletedValueStyle !== \"undefined\") {\n              questDataItem.completedValueStyle =\n                objective.objectiveCompletedValueStyle;\n            }\n\n            if (typeof objective.progress !== \"undefined\") {\n              questDataItem.progressToNextLevel = objective.progress;\n            }\n\n            if (typeof objective.objectiveProgressDescription !== \"undefined\") {\n              // ${questDataItem.description}<br />\n              questDataItem.description = this.replaceStringVariables(\n                objective.objectiveProgressDescription,\n                namedObject.profileStringVariables.integerValuesByHash\n              );\n            }\n\n            questData.push(questDataItem);\n          }\n        }\n      }\n\n      return questData;\n    };\n\n    this.getCharacterRecords = function (\n      namedObject\n    ): CharacterRecordDataItem[] {\n      let characterRecords: CharacterRecordDataItem[] = [];\n\n      let characterRecordKeys = Object.keys(\n        namedObject.characterRecords.records\n      );\n      for (let key of characterRecordKeys) {\n        let characterRecord = namedObject.characterRecords.records[key];\n        if (\n          typeof characterRecord.objectives === \"undefined\" ||\n          (characterRecord.recordName ?? \"\").length === 0\n        )\n          continue;\n\n        let recordObjectives = characterRecord.objectives.filter(\n          (objective: any) => objective.visible && !objective.complete\n        );\n\n        for (let objective of recordObjectives) {\n          let characterRecordData: CharacterRecordDataItem = {\n            name: characterRecord.recordName,\n            type: \"characterRecord\",\n            order: 100,\n            icon: characterRecord.recordIcon,\n            // ${characterRecord.recordDescription}<br />\n            description: `${objective.objectiveProgressDescription ?? \"\"}`,\n            progressToNextLevel: objective.progress,\n            nextLevelAt: objective.completionValue,\n            inProgressValueStyle: objective.objectiveInProgressValueStyle,\n            completedValueStyle: objective.objectiveCompletedValueStyle,\n            state: characterRecord.state,\n          };\n\n          characterRecords.push(characterRecordData);\n        }\n      }\n\n      return characterRecords;\n    };\n\n    return this;\n  }\n}\n","import { DestinyNamedObject } from \"./apiClasses/destinyNamedObject\";\nimport { GoalDataItem } from \"./apiClasses/goalDataItem\";\nimport { Destiny2Goals } from \"./destiny2Goals\";\nimport { log } from \"./log\";\n\nexport class Destiny2ApiClient {\n  checkIfAuthenticated: () => Promise<boolean>;\n  getToken: (state: string, code: string) => Promise<any>;\n  refreshToken: () => Promise<any>;\n  checkManifestVersion: () => Promise<{\n    updatedManifest: boolean;\n    version: string | null;\n  } | null>;\n  checkStoredDefinitions: (\n    downloadMissingDefinitions?: boolean\n  ) => Promise<string[]>;\n  loadDestinyContentData: (definitions: string[]) => Promise<void>;\n  loadDataFromStorage: () => Promise<void>;\n  getManifest: () => Promise<{\n    Response: any;\n  } | null>;\n  loadCommonSettings: () => Promise<any>;\n  getUserToken: () => Promise<string | null>;\n  getLinkedProfiles: (forceRefresh?: boolean) => Promise<unknown>;\n  getUserProfile: (\n    membershipId: string,\n    membershipType: number\n  ) => Promise<unknown>;\n  getLastPlayedCharacter: (forceRefresh?: boolean) => Promise<any | null>;\n  getNamedDataObject: (\n    forceRefresh?: boolean\n  ) => Promise<DestinyNamedObject | null>;\n  getPresentationNodeFromHash: (hash: string) => any[];\n  mapHashesToDefinitionsInObject: (object: any) => any;\n  getTrackableData: (forceRefresh?: boolean) => Promise<GoalDataItem[] | null>;\n\n  apiToken: string;\n  applicationName: string;\n  cachedManifest: any;\n  destinyDataDefinition: { [key: string]: any };\n  lastVersion: string | null;\n  profile: any | null;\n  linkedProfiles: any | null;\n  trackedGoals: GoalDataItem[] | null;\n  goalApi: Destiny2Goals;\n\n  constructor(apiToken: string, appName: string) {\n    _log(\"Initializing\");\n\n    const db = window.db;\n    const eventEmitter = window.eventEmitter;\n\n    const authGatewayUrl = \"https://o2g.itssimple.se\";\n    const destinyBaseUrl = \"https://www.bungie.net\";\n    const destinyApiUrl = \"https://www.bungie.net/Platform\";\n\n    const maxActivitiesPerFetch = 250;\n\n    /**\n     * @description The datatypes we are interested in.\n     */\n    const destinyDataTypes = [\n      \"DestinyActivityTypeDefinition\",\n      \"DestinyActivityDefinition\",\n      \"DestinyArtifactDefinition\",\n      \"DestinyChecklistDefinition\",\n      \"DestinyClassDefinition\",\n      \"DestinyDestinationDefinition\",\n      \"DestinyDamageTypeDefinition\",\n      \"DestinyFactionDefinition\",\n      \"DestinyGenderDefinition\",\n      \"DestinyItemCategoryDefinition\",\n      \"DestinyItemTierTypeDefinition\",\n      \"DestinyInventoryBucketDefinition\",\n      \"DestinyInventoryItemDefinition\",\n      \"DestinyMedalTierDefinition\",\n      \"DestinyMetricDefinition\",\n      \"DestinyMilestoneDefinition\",\n      \"DestinyObjectiveDefinition\",\n      \"DestinyPlaceDefinition\",\n      \"DestinyPresentationNodeDefinition\",\n      \"DestinyProgressionDefinition\",\n      \"DestinyRaceDefinition\",\n      \"DestinyRecordDefinition\",\n      \"DestinySeasonDefinition\",\n      \"DestinySeasonPassDefinition\",\n      \"DestinyStatDefinition\",\n      \"DestinyTraitDefinition\",\n    ];\n\n    const profileComponents = {\n      None: 0,\n      Profiles: 100,\n      VendorReceipts: 101,\n      ProfileInventories: 102,\n      ProfileCurrencies: 103,\n      ProfileProgression: 104,\n      PlatformSilver: 105,\n      Characters: 200,\n      CharacterInventories: 201,\n      CharacterProgressions: 202,\n      CharacterRenderData: 203,\n      CharacterActivities: 204,\n      CharacterEquipment: 205,\n      ItemInstances: 300,\n      ItemObjectives: 301,\n      ItemPerks: 302,\n      ItemRenderData: 303,\n      ItemStats: 304,\n      ItemSockets: 305,\n      ItemTalentGrids: 306,\n      ItemCommonData: 307,\n      ItemPlugStates: 308,\n      ItemPlugObjectives: 309,\n      ItemReusablePlugs: 310,\n      Vendors: 400,\n      VendorCategories: 401,\n      VendorSales: 402,\n      Kiosks: 500,\n      CurrencyLookups: 600,\n      PresentationNodes: 700,\n      Collectibles: 800,\n      Records: 900,\n      Transitory: 1000,\n      Metrics: 1100,\n      StringVariables: 1200,\n    };\n\n    const DestinyItemState = {\n      None: 0,\n      Locked: 1,\n      Tracked: 2,\n      Masterwork: 4,\n    };\n\n    this.lastVersion = null;\n    this.applicationName = appName;\n    this.apiToken = apiToken;\n    this.destinyDataDefinition = {};\n    this.trackedGoals = [];\n\n    function _log(...params: any[]) {\n      log(\"D2API\", params);\n    }\n\n    async function callUrl(\n      method: \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\",\n      url: string,\n      body: any | null = null,\n      authorization: any | null = null\n    ) {\n      let headers: RequestInit[\"headers\"] = {};\n\n      if (body !== null || authorization !== null) {\n        headers[\"Content-Type\"] = \"application/json\";\n        headers[\"x-api-key\"] = self.apiToken;\n        if (authorization !== null) {\n          headers.authorization = `Bearer ${authorization}`;\n        }\n      }\n\n      if (body !== null) {\n        return await fetch(url, {\n          method: method,\n          headers: headers,\n          body: body,\n        });\n      } else {\n        return await fetch(url, {\n          method: method,\n          headers: headers,\n        });\n      }\n    }\n\n    async function refreshTokenIfExpired() {\n      const tokenExpires = await db.getItem(\"destinyTokenExpires\");\n\n      if (tokenExpires < Date.now()) {\n        _log(\"Token expired, refreshing\");\n        await self.refreshToken();\n      }\n    }\n\n    function handleTokenResponse(tokenResponse: any) {\n      // Check if tokenResponse contains a property called error, and if so, log the error and return\n      if (tokenResponse.error) {\n        _log(\"Error handling token\", JSON.stringify(tokenResponse));\n\n        db.removeItem(\"destinyToken\");\n        db.removeItem(\"destinyRefreshToken\");\n        db.removeItem(\"destinyTokenExpires\");\n        db.removeItem(\"destinyRefreshTokenExpires\");\n        db.removeItem(\"destinyBungieMembershipId\");\n\n        return false;\n      }\n\n      // Set the token and refresh token in the database\n      db.setItem(\"destinyToken\", tokenResponse.access_token);\n      db.setItem(\"destinyRefreshToken\", tokenResponse.refresh_token);\n\n      // Calculate when the token expires and set it in the database\n      let tokenExpires = Date.now() + tokenResponse.expires_in * 1000;\n      db.setItem(\"destinyTokenExpires\", tokenExpires);\n\n      // Calculate when the refresh token expires and set it in the database\n      let refreshTokenExpires =\n        Date.now() + tokenResponse.refresh_expires_in * 1000;\n      db.setItem(\"destinyRefreshTokenExpires\", refreshTokenExpires);\n\n      // Set the membership_id in the database\n      db.setItem(\"destinyBungieMembershipId\", tokenResponse.membership_id);\n\n      return true;\n    }\n\n    this.loadDataFromStorage = async () => {\n      _log(\"Loading data from storage\");\n\n      let _cachedManifest = await db.getItem(\"manifest\");\n      if (_cachedManifest !== null) {\n        self.cachedManifest = JSON.parse(_cachedManifest);\n      }\n\n      let _cachedManifestVersion = await db.getItem(\"manifestVersion\");\n      if (_cachedManifestVersion !== null) {\n        self.lastVersion = _cachedManifestVersion;\n      }\n\n      self.checkStoredDefinitions();\n\n      for (let dataType of destinyDataTypes) {\n        let _cachedData = await db.getItem(`destinyContent-${dataType}`);\n        if (_cachedData !== null) {\n          self.destinyDataDefinition[dataType] = JSON.parse(_cachedData);\n        }\n      }\n\n      let _profile = await db.getItem(\"destiny-profile\");\n      if (_profile !== null) {\n        self.profile = JSON.parse(_profile);\n      }\n\n      let _linkedProfiles = await db.getItem(\"destiny-linkedProfiles\");\n      if (_linkedProfiles !== null) {\n        self.linkedProfiles = JSON.parse(_linkedProfiles);\n      }\n\n      _log(\"Data loaded from storage\");\n      eventEmitter.emit(\"destiny-data-loaded\");\n    };\n\n    this.checkIfAuthenticated = async () => {\n      try {\n        await refreshTokenIfExpired();\n        const isAuthenticated = (await db.getItem(\"destinyToken\")) !== null;\n        eventEmitter.emit(\"destiny2:authenticated\", isAuthenticated);\n        return isAuthenticated;\n      } catch (e) {\n        _log(\"Error checking if authenticated\", e);\n        eventEmitter.emit(\"destiny2:authenticated\", false);\n        return false;\n      }\n    };\n\n    this.getToken = async (state: string, code: string) => {\n      const tokenRequest = await callUrl(\n        \"POST\",\n        `${authGatewayUrl}/token/${self.applicationName}`,\n        JSON.stringify({\n          code: code,\n        })\n      );\n\n      if (tokenRequest.status === 200) {\n        let tokenResponse = await tokenRequest.json();\n\n        if (handleTokenResponse(tokenResponse)) {\n          eventEmitter.emit(\"destiny2:auth-success\");\n        } else {\n          eventEmitter.emit(\"destiny2:auth-failed\");\n        }\n        return tokenResponse;\n      }\n      _log(\n        \"Error getting token\",\n        tokenRequest.status,\n        tokenRequest.statusText,\n        await tokenRequest.text()\n      );\n      eventEmitter.emit(\"destiny2:auth-failed\");\n    };\n\n    this.refreshToken = async () => {\n      const refreshToken = await db.getItem(\"destinyRefreshToken\");\n      if (refreshToken == null) {\n        eventEmitter.emit(\"destiny2:refreshToken\", null);\n        return null;\n      }\n\n      const tokenRequest = await callUrl(\n        \"POST\",\n        `${authGatewayUrl}/refresh/${self.applicationName}`,\n        JSON.stringify({\n          refresh_token: refreshToken,\n        })\n      );\n\n      if (tokenRequest.status === 200) {\n        let tokenResponse = await tokenRequest.json();\n\n        if (handleTokenResponse(tokenResponse)) {\n          eventEmitter.emit(\"destiny2:refresh-success\");\n        } else {\n          eventEmitter.emit(\"destiny2:refresh-failed\");\n        }\n\n        return;\n      } else {\n        eventEmitter.emit(\"destiny2:refresh-failed\");\n      }\n    };\n\n    this.checkManifestVersion = async () => {\n      _log(\"Checking manifest version\");\n      return new Promise(async function (resolve, reject) {\n        let manifest = await self.getManifest();\n\n        if (manifest == null) {\n          _log(\"Failed to fetch API\");\n          return null;\n        }\n\n        let lastVersion = (await db.getItem(\"manifestVersion\")) ?? \"null\";\n\n        if (manifest.Response.version !== lastVersion) {\n          /* Currently cached data is older than 60 minutes, so we clear it. */\n          await db.removeItem(\"lastManifestUpdate\");\n          await db.removeItem(\"manifest\");\n          await db.removeItem(\"manifestVersion\");\n\n          for (let dataType of destinyDataTypes) {\n            await db.removeItem(`destinyContent-${dataType}`);\n          }\n\n          self.cachedManifest = manifest.Response;\n\n          await db.setItem(\"manifestVersion\", manifest.Response.version);\n          await db.setItem(\"manifest\", JSON.stringify(self.cachedManifest));\n          await db.setItem(\"lastManifestUpdate\", Date.now());\n\n          resolve({ updatedManifest: true, version: self.lastVersion });\n          _log(\"Manifest updated\");\n          return;\n        }\n\n        self.cachedManifest = manifest.Response;\n\n        resolve({ updatedManifest: false, version: self.lastVersion });\n        _log(\"Manifest version is up to date\");\n      });\n    };\n\n    this.checkStoredDefinitions = async function (\n      downloadMissingDefinitions = true\n    ) {\n      let missingDefinitions: string[] = [];\n\n      for (let dataType of destinyDataTypes) {\n        let data = await db.getItem(`destinyContent-${dataType}`);\n        if (data === null) {\n          missingDefinitions.push(dataType);\n        }\n      }\n\n      if (missingDefinitions.length > 0 && downloadMissingDefinitions) {\n        for (let dataType of missingDefinitions) {\n          await db.removeItem(`destinyContent-${dataType}`);\n        }\n\n        await self.loadDestinyContentData(missingDefinitions);\n      }\n\n      return missingDefinitions;\n    };\n\n    this.loadDestinyContentData = async function (definitions: string[] = []) {\n      for (let dataType of definitions) {\n        await loadDestinyContentDataType(dataType);\n      }\n    };\n\n    async function loadDestinyContentDataType(dataType: string) {\n      let manifest = self.cachedManifest;\n\n      const dataTypeWords = dataType\n        .replace(\"Destiny\", \"\")\n        .split(/(?=[A-Z])/)\n        .join(\" \");\n\n      eventEmitter.emit(\"loading-text\", `Loading ${dataTypeWords}`);\n\n      const contentTypeDownload = await callUrl(\n        \"GET\",\n        `${destinyBaseUrl}${manifest.jsonWorldComponentContentPaths.en[dataType]}`\n      );\n\n      const contentLength = contentTypeDownload.headers.get(\"content-length\");\n\n      const total = parseInt(contentLength || \"0\", 10);\n      let loaded = 0;\n\n      const res = new Response(\n        new ReadableStream({\n          async start(controller) {\n            const reader = contentTypeDownload.body!.getReader();\n\n            let progressIndication = 0;\n            for (;;) {\n              var r = await reader!.read();\n              if (r!.done) {\n                break;\n              }\n              loaded += r!.value.byteLength;\n\n              progressIndication++;\n              if (progressIndication % 30 === 0) {\n                eventEmitter.emit(\n                  \"loading-text\",\n                  `Loading ${dataTypeWords} (${new Intl.NumberFormat(\n                    \"sv-SE\"\n                  ).format(\n                    Math.round(\n                      (loaded / 1024.0 / 1024.0) * 100 + Number.EPSILON\n                    ) / 100\n                  )} MB)`\n                );\n              }\n              controller.enqueue(r!.value);\n            }\n\n            eventEmitter.emit(\n              \"loading-text\",\n              `Loading ${dataTypeWords} (${new Intl.NumberFormat(\n                \"sv-SE\"\n              ).format(\n                Math.round((loaded / 1024.0 / 1024.0) * 100 + Number.EPSILON) /\n                  100\n              )} MB)`\n            );\n            controller.close();\n          },\n        })\n      );\n\n      if (contentTypeDownload.status !== 200) {\n        log(\"Manifest download error\", await res.json());\n        return;\n      }\n\n      const contentTypeJson = await res.json();\n\n      self.destinyDataDefinition[dataType] = contentTypeJson;\n      db.setItem(`destinyContent-${dataType}`, JSON.stringify(contentTypeJson));\n    }\n\n    this.getManifest = async function (): Promise<{\n      Response: any;\n    } | null> {\n      let lastManifestUpdate = await db.getItem(\"lastManifestUpdate\");\n      _log(\"Checking if manifest is cached\");\n\n      if (\n        lastManifestUpdate !== null &&\n        Date.now() - lastManifestUpdate < 60000 * 60\n      ) {\n        let _manifest = await db.getItem(\"manifest\");\n        if (_manifest !== null) {\n          _log(\"Manifest is cached\");\n          return { Response: JSON.parse(_manifest) };\n        }\n      }\n\n      let manifestRequest = await callUrl(\n        \"GET\",\n        `${destinyApiUrl}/Destiny2/Manifest/`\n      );\n\n      if (manifestRequest.status === 200) {\n        let manifest = await manifestRequest.json();\n        if (manifest.ErrorStatus == \"Success\") {\n          db.setItem(\"lastManifestUpdate\", Date.now());\n          db.setItem(\"manifest\", JSON.stringify(manifest.Response));\n          _log(\"Manifest updated from API\");\n\n          return { Response: manifest.Response };\n        } else {\n          _log(\"Manifesterror\");\n          _log(manifest.Response);\n\n          return null;\n        }\n      } else {\n        let responseText = manifestRequest.json();\n        _log(\"Error when fetching Manifest\");\n        _log(responseText);\n\n        return null;\n      }\n    };\n\n    this.loadCommonSettings = async function () {\n      await refreshTokenIfExpired();\n\n      const settings = await callUrl(\n        \"GET\",\n        `${destinyApiUrl}/Settings`,\n        null,\n        await this.getUserToken()\n      );\n      if (settings.status === 200) {\n        return await settings.json();\n      }\n\n      _log(\n        \"Error fetching common settings\",\n        settings.status,\n        settings.statusText\n      );\n      return null;\n    };\n\n    this.getUserToken = async function () {\n      return await db.getItem(\"destinyToken\");\n    };\n\n    this.getLinkedProfiles = async function (forceRefresh: boolean = false) {\n      if (forceRefresh) {\n        self.linkedProfiles = null;\n      }\n\n      if (self.linkedProfiles != null) {\n        return self.linkedProfiles;\n      }\n\n      await refreshTokenIfExpired();\n\n      return new Promise(async (resolve, reject) => {\n        var bnetMemberId = await db.getItem(\"destinyBungieMembershipId\");\n\n        let linkedProfile = await callUrl(\n          \"GET\",\n          `${destinyApiUrl}/Destiny2/-1/Profile/${bnetMemberId}/LinkedProfiles/`,\n          null,\n          await this.getUserToken()\n        );\n\n        if (linkedProfile.status === 200) {\n          let profiles = await linkedProfile.json();\n\n          db.setItem(\n            \"destiny-linkedProfiles\",\n            JSON.stringify(profiles.Response)\n          );\n\n          self.linkedProfiles = profiles.Response;\n\n          resolve(profiles.Response);\n        } else {\n          self.refreshToken();\n          reject(linkedProfile);\n        }\n      });\n    };\n\n    this.getUserProfile = async function (\n      membershipId: string,\n      membershipType: number\n    ) {\n      let interestingComponents = [\n        profileComponents.Profiles,\n        profileComponents.ProfileInventories,\n        profileComponents.ProfileCurrencies,\n        profileComponents.ProfileProgression,\n        profileComponents.Characters,\n        profileComponents.CharacterInventories,\n        profileComponents.CharacterProgressions,\n        profileComponents.CharacterActivities,\n        profileComponents.CharacterEquipment,\n        profileComponents.ItemInstances,\n        profileComponents.ItemObjectives,\n        profileComponents.ItemSockets,\n        profileComponents.ItemTalentGrids,\n        profileComponents.ItemCommonData,\n        profileComponents.ItemPlugStates,\n        profileComponents.ItemPlugObjectives,\n        profileComponents.ItemReusablePlugs,\n        profileComponents.Metrics,\n        profileComponents.Records,\n        profileComponents.Collectibles,\n        profileComponents.StringVariables,\n      ];\n\n      await refreshTokenIfExpired();\n\n      return new Promise(async (resolve, reject) => {\n        let userProfile = await callUrl(\n          \"GET\",\n          `${destinyApiUrl}/Destiny2/${membershipType}/Profile/${membershipId}/?components=${interestingComponents.join(\n            \",\"\n          )}`,\n          null,\n          await this.getUserToken()\n        );\n        if (userProfile.status === 200) {\n          let profile = await userProfile.json();\n\n          db.setItem(\"destiny-profile\", JSON.stringify(profile.Response));\n          self.profile = profile.Response;\n\n          resolve(profile.Response);\n        } else {\n          self.refreshToken();\n          reject(userProfile);\n        }\n      });\n    };\n\n    this.getLastPlayedCharacter = async function (forceRefresh = false) {\n      await refreshTokenIfExpired();\n\n      let _profile = self.profile;\n\n      if (forceRefresh) {\n        _profile = null;\n      }\n\n      if (self.linkedProfiles === null) {\n        return null;\n      }\n\n      await self.getLinkedProfiles(forceRefresh);\n\n      if (\n        self.linkedProfiles !== null &&\n        self.linkedProfiles.profiles !== null &&\n        self.linkedProfiles.profiles.length > 0\n      ) {\n        var primaryMembership = self.linkedProfiles.profiles.sort(\n          (a: any, b: any) => (a.dateLastPlayed > b.dateLastPlayed ? -1 : 1)\n        )[0];\n\n        _profile = await self.getUserProfile(\n          primaryMembership.membershipId,\n          primaryMembership.membershipType\n        );\n      }\n\n      let characters = [];\n\n      for (let char of _profile.profile.data.characterIds) {\n        characters.push(_profile.characters.data[char]);\n      }\n\n      let _last = characters.sort((a, b) =>\n        a.dateLastPlayed > b.dateLastPlayed ? -1 : 1\n      )[0];\n\n      let lastPlayedCharacter = {\n        characterInfo: _last,\n        characterProgression: !!!_profile.characterProgressions.disabled\n          ? _profile.characterProgressions.data[_last.characterId]\n          : {},\n        characterActivities: !!!_profile.characterActivities.disabled\n          ? _profile.characterActivities.data[_last.characterId]\n          : {},\n        characterUninstancedItemComponents:\n          _profile.characterUninstancedItemComponents[_last.characterId]\n            .objectives.data,\n        characterInventory:\n          _profile.characterInventories.data[_last.characterId].items,\n        characterEquipment:\n          _profile.characterEquipment.data[_last.characterId].items,\n        characterPlugSets: !!!_profile.characterPlugSets.disabled\n          ? _profile.characterPlugSets.data[_last.characterId].plugs\n          : {},\n        characterCollectibles:\n          _profile.characterCollectibles.data[_last.characterId].collectibles,\n        characterRecords: _profile.characterRecords.data[_last.characterId],\n        characterStringVariables:\n          _profile.characterStringVariables.data[_last.characterId],\n        profileProgression: _profile.profileProgression.data,\n        metrics: _profile.metrics.data.metrics,\n        itemComponents: _profile.itemComponents,\n        records: _profile.profileRecords.data,\n        profileInventory: _profile.profileInventory.data.items,\n        profileCurrency: _profile.profileCurrencies.data.items,\n        profilePlugSets: !!!_profile.profilePlugSets.disabled\n          ? _profile.profilePlugSets.data.plugs\n          : {},\n        profileCollectibles: _profile.profileCollectibles.data,\n        profile: _profile.profile.data,\n        profileStringVariables: _profile.profileStringVariables.data,\n      };\n\n      return lastPlayedCharacter;\n    };\n\n    this.getNamedDataObject = async function (\n      forceRefresh = false\n    ): Promise<DestinyNamedObject | null> {\n      let _lastPlayer = await self.getLastPlayedCharacter(forceRefresh);\n\n      if (_lastPlayer == null) {\n        return null;\n      }\n\n      let namedDataObject = {\n        ..._lastPlayer,\n      };\n\n      for (let statKey of Object.keys(namedDataObject.characterInfo.stats)) {\n        namedDataObject.characterInfo.stats[statKey] = {\n          statValue: namedDataObject.characterInfo.stats[statKey],\n          statHash: statKey,\n        };\n      }\n\n      for (let metricKey of Object.keys(namedDataObject.metrics)) {\n        namedDataObject.metrics[metricKey] = {\n          ...namedDataObject.metrics[metricKey],\n          metricHash: metricKey,\n        };\n      }\n\n      for (let recordKey of Object.keys(namedDataObject.records.records)) {\n        namedDataObject.records.records[recordKey] = {\n          ...namedDataObject.records.records[recordKey],\n          recordHash: recordKey,\n          parentNodeHashes:\n            self.destinyDataDefinition.DestinyRecordDefinition[recordKey]\n              .parentNodeHashes,\n        };\n      }\n\n      for (let recordKey of Object.keys(\n        namedDataObject.characterRecords.records\n      )) {\n        namedDataObject.characterRecords.records[recordKey] = {\n          ...namedDataObject.characterRecords.records[recordKey],\n          recordHash: recordKey,\n          parentNodeHashes:\n            self.destinyDataDefinition.DestinyRecordDefinition[recordKey]\n              .parentNodeHashes,\n        };\n      }\n\n      namedDataObject = self.mapHashesToDefinitionsInObject(namedDataObject);\n\n      const cacheBreaker = await db.getItem(\"destiny2-use-cachebreaker\", false);\n      if (cacheBreaker) {\n        const lockableItems = _lastPlayer.characterInventory.filter(\n          (i: any) => i.lockable && i.inventoryitemItemType == 3\n        );\n\n        if (lockableItems.length > 0) {\n          // await self.lockItem(\n          //   _lastPlayer.characterInfo.membershipType,\n          //   _lastPlayer.characterInfo.characterId,\n          //   lockableItems[0].itemInstanceId,\n          //   lockableItems[0].state & DestinyItemState.Locked\n          // );\n        }\n      }\n\n      eventEmitter.emit(\"destiny2-api-update\", namedDataObject);\n\n      return namedDataObject;\n    };\n\n    this.getPresentationNodeFromHash = function (hash: string) {\n      const presentationNameArray = [];\n\n      const presentationNode =\n        self.destinyDataDefinition.DestinyPresentationNodeDefinition[hash];\n      if (presentationNode) {\n        presentationNameArray.unshift({\n          name: presentationNode.displayProperties.name,\n          description: presentationNode.displayProperties.description,\n          icon: presentationNode.displayProperties.icon,\n          hash: hash,\n        });\n\n        if (presentationNode.parentNodeHashes) {\n          for (let _hash of presentationNode.parentNodeHashes) {\n            const subItems = self.getPresentationNodeFromHash(_hash);\n            for (let item of subItems) {\n              presentationNameArray.push(item);\n            }\n          }\n        }\n      }\n\n      return presentationNameArray;\n    };\n\n    this.mapHashesToDefinitionsInObject = function (object: any) {\n      let _objectCopy = { ...object };\n\n      let keys = Object.keys(_objectCopy);\n      for (let key of keys) {\n        let _type = typeof _objectCopy[key];\n        let _field = _objectCopy[key];\n\n        if (Array.isArray(_field)) {\n          for (let x = 0; x < _field.length; x++) {\n            let arrItem = _field[x];\n            if (typeof arrItem === \"object\") {\n              _field[x] = self.mapHashesToDefinitionsInObject(arrItem);\n            } else {\n              _field[x] = arrItem;\n            }\n          }\n          _objectCopy[key] = _field;\n        } else if (_type === \"object\" && _field !== null) {\n          _objectCopy[key] = self.mapHashesToDefinitionsInObject(\n            _objectCopy[key]\n          );\n        } else {\n          if (key.indexOf(\"Hash\") > -1 && !Array.isArray(_field)) {\n            let _hashType = key\n              .split(\"Hash\")[0]\n              .replace(\"current\", \"\")\n              .toLowerCase();\n\n            switch (_hashType) {\n              case \"item\":\n              case \"plugitem\":\n                _hashType = \"inventoryitem\";\n                break;\n            }\n\n            let dataType = destinyDataTypes.find(\n              (i) =>\n                i.toLowerCase() == `Destiny${_hashType}Definition`.toLowerCase()\n            );\n            let definitionData = self.destinyDataDefinition[dataType!];\n            if (\n              definitionData &&\n              definitionData[_field] &&\n              definitionData[_field].displayProperties\n            ) {\n              const dField = definitionData[_field];\n              if (\n                dField.displayProperties.name &&\n                dField.displayProperties.name.length > 0\n              ) {\n                _objectCopy[`${_hashType}Name`] = dField.displayProperties.name;\n              } else if (\n                dField.setData &&\n                dField.setData.questLineName &&\n                dField.setData.questLineName.length > 0\n              ) {\n                _objectCopy[`${_hashType}Name`] = dField.setData.questLineName;\n              }\n\n              if (\n                dField.displayProperties.description &&\n                dField.displayProperties.description.length > 0\n              ) {\n                _objectCopy[`${_hashType}Description`] =\n                  dField.displayProperties.description;\n              }\n\n              if (\n                dField.displayProperties.icon &&\n                dField.displayProperties.icon.length > 0\n              ) {\n                _objectCopy[`${_hashType}Icon`] = dField.displayProperties.icon;\n              }\n\n              if (\n                dField.progressDescription &&\n                dField.progressDescription.length > 0\n              ) {\n                _objectCopy[`${_hashType}ProgressDescription`] =\n                  dField.progressDescription;\n              }\n\n              if (typeof dField.inProgressValueStyle !== \"undefined\") {\n                _objectCopy[`${_hashType}InProgressValueStyle`] =\n                  dField.inProgressValueStyle;\n              }\n\n              if (typeof dField.completedValueStyle !== \"undefined\") {\n                _objectCopy[`${_hashType}CompletedValueStyle`] =\n                  dField.completedValueStyle;\n              }\n\n              if (typeof dField.itemType !== \"undefined\") {\n                _objectCopy[`${_hashType}ItemType`] = dField.itemType;\n              }\n\n              if (typeof dField.parentNodeHashes !== \"undefined\") {\n                _objectCopy[`parentNodeHashes`] = dField.parentNodeHashes.map(\n                  (item: any) => {\n                    return self.getPresentationNodeFromHash(item);\n                  }\n                );\n              }\n            }\n          }\n\n          _objectCopy[key] = _field;\n        }\n      }\n\n      return _objectCopy;\n    };\n\n    this.getTrackableData = async function (\n      forceRefresh = false\n    ): Promise<GoalDataItem[] | null> {\n      let namedObject = await self.getNamedDataObject(forceRefresh);\n\n      if (namedObject == null) {\n        return null;\n      }\n\n      let seasonDefinition =\n        self.destinyDataDefinition.DestinySeasonDefinition[\n          namedObject.profile.currentSeasonHash\n        ];\n      let seasonPassDefinition =\n        self.destinyDataDefinition.DestinySeasonPassDefinition[\n          seasonDefinition.seasonPassHash\n        ];\n\n      let trackableDataItems: GoalDataItem[] = [];\n\n      let milestoneData = self.goalApi.getMilestoneData(namedObject);\n      for (let milestone of milestoneData) {\n        trackableDataItems.push(milestone);\n      }\n\n      let bountyData = self.goalApi.getBounties(namedObject);\n      for (let bounty of bountyData) {\n        trackableDataItems.push(bounty);\n      }\n\n      let questData = self.goalApi.getQuests(namedObject);\n      for (let quest of questData) {\n        trackableDataItems.push(quest);\n      }\n\n      let characterRecords = self.goalApi.getCharacterRecords(namedObject);\n\n      for (let characterRecord of characterRecords) {\n        trackableDataItems.push(characterRecord);\n      }\n\n      function sortTrackableItems(a: any, b: any) {\n        if (\n          typeof a.nextLevelAt !== \"undefined\" &&\n          typeof b.nextLevelAt !== \"undefined\"\n        ) {\n          let aProgress = (a.progressToNextLevel / a.nextLevelAt) * 100;\n          let bProgress = (b.progressToNextLevel / b.nextLevelAt) * 100;\n\n          return aProgress < bProgress ? 1 : -1;\n        }\n\n        if (typeof a.endDate !== \"undefined\") {\n          return typeof b.endDate === \"undefined\" || a.endDate < b.endDate\n            ? -1\n            : 1;\n        }\n\n        return a.order < b.order ? 1 : -1;\n      }\n\n      const trackedItems = trackableDataItems\n        .filter((i) => i.tracked)\n        .sort(sortTrackableItems);\n\n      const itemsWithExpiration = trackableDataItems\n        .filter((i) => i.endDate && !i.tracked)\n        .sort(sortTrackableItems);\n      const itemsWithoutExpiration = trackableDataItems\n        .filter((i) => !i.endDate && !i.tracked)\n        .sort(sortTrackableItems);\n\n      trackableDataItems = [\n        ...trackedItems,\n        ...itemsWithExpiration,\n        ...itemsWithoutExpiration,\n      ];\n\n      trackableDataItems.unshift(\n        self.goalApi.getSeasonRankData(\n          namedObject,\n          seasonDefinition,\n          seasonPassDefinition\n        )\n      );\n\n      self.trackedGoals = trackableDataItems;\n      eventEmitter.emit(\"goal-list-update\", trackableDataItems);\n\n      return trackableDataItems;\n    };\n\n    let self = this;\n\n    this.goalApi = new Destiny2Goals(this);\n\n    _log(\"Initialized\");\n    return this;\n  }\n}\n","import { render, createContext, Context } from \"preact\";\nimport { signal } from \"@preact/signals\";\nimport { log } from \"./scripts/log\";\nimport { App } from \"./app\";\nimport { Destiny2Database } from \"./scripts/indexedDB\";\nimport { EventEmitter } from \"./scripts/eventEmitter\";\nimport { Destiny2ApiClient } from \"./scripts/apiClient\";\nimport \"./assets/fonts/style.css\";\nimport \"./index.css\";\nimport \"./styles/main.scss\";\nimport { D2AppState } from \"./classes/appState\";\n\ndeclare global {\n  interface Window {\n    db: Destiny2Database;\n    eventEmitter: EventEmitter;\n    apiClient: Destiny2ApiClient;\n    appState: Context<D2AppState>;\n  }\n}\n\nlog(\"MAIN\", \"Starting app...\");\n\nwindow.eventEmitter = new EventEmitter();\nwindow.db = new Destiny2Database();\nwindow.apiClient = new Destiny2ApiClient(\n  import.meta.env.VITE_BUNGIE_API_KEY,\n  import.meta.env.VITE_BUNGIE_API_APP\n);\n\nfunction createAppState(): D2AppState {\n  const isDataLoaded = signal(false);\n  const isAuthenticated = signal(false);\n  const goals = signal([]);\n\n  return {\n    isDataLoaded,\n    isAuthenticated,\n    goals,\n  };\n}\n\nconst state = createAppState();\n\nwindow.appState = createContext(state);\nwindow.db.initializeDatabase().then(async () => {\n  log(\"MAIN\", \"Database initialized, checking for updates...\");\n\n  state.isAuthenticated.value = await window.apiClient.checkIfAuthenticated();\n\n  render(<App />, document.getElementById(\"app\") as HTMLElement);\n});\n"],"names":["log","category","params","JSON","stringify","MainPage","props","isAuthenticated","value","location","href","_jsx","_Fragment","_jsxs","children","import","Date","getTime","Authenticated","apiClient","window","url","getCurrentUrl","code","URL","origin","searchParams","get","getToken","then","catch","err","formatTimespan","startDate","endDate","latestSession","outputTimesObjectFromDifference","getTimeDifference","outputTimesObject","days","hours","minutes","time","push","join","differenceInSeconds","getTimeObject","now","Math","floor","seconds","intlFormat","Intl","NumberFormat","destinyBaseUrl","trackingItems","milestones","bounties","quests","records","seasonRank","GoalList","eventEmitter","dataUpdate","useEffect","addEventListener","updateGoalList","getTrackableData","setInterval","clearInterval","renderProgress","goal","progress","inProgressValueStyle","nextLevelAt","className","progressToNextLevel","progressPercent","toFixed","format","renderGoalItem","icon","src","expiryDate","class","name","description","goals","_visibleGoals","addGoal","type","length","map","Dashboard","isDataLoaded","profile","Footer","getUTCFullYear","LoggingIn","data","setLoadingText","text","loadingText","document","getElementById","innerText","checkIfAuthenticated","result","manifestVersion","checkManifestVersion","getLastPlayedCharacter","missingDefinitions","checkStoredDefinitions","loadDataFromStorage","setTimeout","emit","error","status","console","json","id","Header","App","state","useContext","appState","Router","history","createHashHistory","Fragment","path","Destiny2Database","constructor","DBInstance","initializeDatabase","setItem","setItems","getItem","removeItem","setStorageItem","setStorageItems","getStorageItem","getStorageItems","removeStorageItem","Promise","resolve","reject","dbRequest","indexedDB","open","onupgradeneeded","event","db","oldVersion","newVersion","createObjectStore","autoIncrement","keyPath","createIndex","onsuccess","e","target","onerror","_setItem","storeName","key","request","self","transaction","objectStore","put","_getFilteredItems","filter","getAll","_getItem","defaultValue","_removeItem","delete","items","item","storageName","EventEmitter","eventListeners","eventName","eventHandler","handler","parse","ev","forEach","l","ItemState","None","Locked","Tracked","Masterwork","Crafted","HighlightedObjective","Destiny2Goals","destiny2ApiClient","getSeasonRankData","replaceStringVariables","getMilestoneData","getBounties","getQuests","getCharacterRecords","destinyApiClient","namedObject","seasonDefinition","seasonPassDefinition","seasonPassData","characterProgression","progressions","seasonPassProgressionHash","seasonPassProgressionData","prestigeProgressionHash","seasonArtifactData","destinyDataDefinition","DestinyInventoryItemDefinition","artifactItemHash","level","levelCap","displayProperties","order","completedValueStyle","seasonRankDataItem","string","profileVariables","indexOf","matchRegex","allMatches","match","newString","i","_match","matchIndex","matchString","replace","milestoneData","milestoneKeys","Object","keys","milestoneKey","milestone","milestoneDataItem","milestoneName","profileStringVariables","integerValuesByHash","milestoneDescription","milestoneIcon","availableQuests","quest","tracked","started","completed","stepObjectives","step","complete","completionValue","objectiveInProgressValueStyle","objectiveCompletedValueStyle","activityIcon","activities","activity","challenges","challenge","objective","bountyItemType","bountyData","bountyItems","characterInventory","inventoryitemItemType","bounty","incompleteTasks","itemComponents","objectives","itemInstanceId","obj","bountyDataItem","inventoryitemName","inventoryitemDescription","inventoryitemIcon","expirationDate","objectiveProgressDescription","questBucketHash","questData","questItems","bucketHash","instancedQuestItems","uninstancedQuestItems","instanceQuest","itemObjectives","_objectives","visible","questDataItem","uninstancedQuest","questObjectives","uninstancedItemObjectives","itemHash","characterRecords","characterRecordKeys","characterRecord","recordName","recordObjectives","characterRecordData","recordIcon","Destiny2ApiClient","apiToken","appName","refreshToken","loadDestinyContentData","getManifest","loadCommonSettings","getUserToken","getLinkedProfiles","getUserProfile","getNamedDataObject","getPresentationNodeFromHash","mapHashesToDefinitionsInObject","applicationName","cachedManifest","lastVersion","linkedProfiles","trackedGoals","goalApi","_log","authGatewayUrl","destinyApiUrl","destinyDataTypes","profileComponents","Profiles","VendorReceipts","ProfileInventories","ProfileCurrencies","ProfileProgression","PlatformSilver","Characters","CharacterInventories","CharacterProgressions","CharacterRenderData","CharacterActivities","CharacterEquipment","ItemInstances","ItemObjectives","ItemPerks","ItemRenderData","ItemStats","ItemSockets","ItemTalentGrids","ItemCommonData","ItemPlugStates","ItemPlugObjectives","ItemReusablePlugs","Vendors","VendorCategories","VendorSales","Kiosks","CurrencyLookups","PresentationNodes","Collectibles","Records","Transitory","Metrics","StringVariables","callUrl","method","body","authorization","headers","fetch","refreshTokenIfExpired","handleTokenResponse","tokenResponse","access_token","refresh_token","tokenExpires","expires_in","refreshTokenExpires","refresh_expires_in","membership_id","_cachedManifest","_cachedManifestVersion","dataType","_cachedData","_profile","_linkedProfiles","tokenRequest","statusText","manifest","Response","version","updatedManifest","downloadMissingDefinitions","definitions","loadDestinyContentDataType","dataTypeWords","split","contentTypeDownload","jsonWorldComponentContentPaths","en","loaded","res","ReadableStream","start","controller","reader","getReader","progressIndication","r","read","done","byteLength","round","Number","EPSILON","enqueue","close","contentTypeJson","lastManifestUpdate","_manifest","manifestRequest","ErrorStatus","responseText","settings","forceRefresh","bnetMemberId","linkedProfile","profiles","membershipId","membershipType","interestingComponents","userProfile","primaryMembership","sort","a","b","dateLastPlayed","characters","char","characterIds","_last","lastPlayedCharacter","characterInfo","characterProgressions","disabled","characterId","characterActivities","characterUninstancedItemComponents","characterInventories","characterEquipment","characterPlugSets","plugs","characterCollectibles","collectibles","characterStringVariables","profileProgression","metrics","profileRecords","profileInventory","profileCurrency","profileCurrencies","profilePlugSets","profileCollectibles","_lastPlayer","namedDataObject","statKey","stats","statValue","statHash","metricKey","metricHash","recordKey","recordHash","parentNodeHashes","DestinyRecordDefinition","lockable","hash","presentationNameArray","presentationNode","DestinyPresentationNodeDefinition","unshift","_hash","subItems","object","_objectCopy","_type","_field","Array","isArray","x","arrItem","_hashType","toLowerCase","find","definitionData","dField","setData","questLineName","progressDescription","itemType","DestinySeasonDefinition","currentSeasonHash","DestinySeasonPassDefinition","seasonPassHash","trackableDataItems","sortTrackableItems","aProgress","bProgress","trackedItems","itemsWithExpiration","itemsWithoutExpiration","createAppState","signal","createContext"],"mappings":"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"}